basePath: /
definitions:
  models.APIResponse:
    properties:
      data: {}
      message:
        type: string
      statusCode:
        type: integer
      success:
        type: boolean
    type: object
  models.AuthRequest:
    properties:
      api_key:
        type: string
    required:
    - api_key
    type: object
  models.AuthResponse:
    properties:
      expires_at:
        type: string
      token:
        type: string
    type: object
  models.DBMetrics:
    properties:
      active_connections:
        type: integer
      avg_query_time_ms:
        type: number
      queries_per_sec:
        type: number
      slow_queries:
        type: integer
    type: object
  models.DashboardData:
    properties:
      balance: {}
      invoice_stats:
        $ref: '#/definitions/models.InvoiceStats'
      monitoring_data: {}
      recent_invoices:
        items:
          $ref: '#/definitions/models.InvoiceRecord'
        type: array
      recent_transactions:
        items:
          $ref: '#/definitions/models.TransactionRecord'
        type: array
      source_breakdown:
        items:
          $ref: '#/definitions/models.SourceStats'
        type: array
      stats:
        $ref: '#/definitions/models.SystemStats'
      system_status:
        type: string
    type: object
  models.DiskMetrics:
    properties:
      free_bytes:
        type: integer
      io_stats:
        $ref: '#/definitions/models.IOStats'
      total_bytes:
        type: integer
      used_bytes:
        type: integer
      used_percent:
        type: number
    type: object
  models.IOStats:
    properties:
      read_bytes:
        type: integer
      read_ops:
        type: integer
      write_bytes:
        type: integer
      write_ops:
        type: integer
    type: object
  models.InvoiceRecord:
    properties:
      amount:
        type: integer
      created_at:
        type: string
      created_at_month:
        type: string
      created_at_year:
        type: integer
      due_date:
        type: string
      email:
        type: string
      fullname:
        type: string
      id:
        type: string
      invoice_id:
        type: string
      invoice_status_id:
        type: string
      metadata:
        additionalProperties: true
        type: object
      modified_at: {}
      paid_at: {}
      payments:
        items:
          $ref: '#/definitions/models.PaymentRecord'
        type: array
      phone:
        type: string
      title:
        type: string
      username:
        type: string
    type: object
  models.InvoiceStats:
    properties:
      last_updated:
        type: string
      paid_invoices:
        type: integer
      payment_rate:
        type: number
      pending_invoices:
        type: integer
      total_invoices:
        type: integer
      total_revenue:
        type: integer
      unpaid_invoices:
        type: integer
    type: object
  models.LoadMetrics:
    properties:
      load_15min:
        type: number
      load_1min:
        type: number
      load_5min:
        type: number
    type: object
  models.MemoryMetrics:
    properties:
      available_bytes:
        type: integer
      has_memory_leak:
        type: boolean
      total_bytes:
        type: integer
      used_bytes:
        type: integer
      used_percent:
        type: number
    type: object
  models.NetworkMetrics:
    properties:
      bandwidth_mbps:
        type: number
      bytes_recv:
        type: integer
      bytes_sent:
        type: integer
      latency_ms:
        type: number
      packets_recv:
        type: integer
      packets_sent:
        type: integer
    type: object
  models.PackageSearchRequest:
    properties:
      max_price:
        example: 10000
        type: integer
      min_price:
        example: 1000
        type: integer
      payment_method:
        example: BALANCE
        type: string
      query:
        example: masa aktif
        type: string
    type: object
  models.PaymentRecord:
    properties:
      amount:
        type: integer
      completed_at: {}
      created_at:
        type: string
      expired_at:
        type: string
      external_id:
        type: string
      id:
        type: string
      payment_link:
        type: string
      payment_method_id:
        type: string
      payment_status_id:
        type: string
      publisher_order_id: {}
      reference_id:
        type: string
      reference_type:
        type: string
    type: object
  models.ResponseTimeMetrics:
    properties:
      average_ms:
        type: number
      max_ms:
        type: number
      min_ms:
        type: number
      p95_ms:
        type: number
      p99_ms:
        type: number
    type: object
  models.SecurityMetrics:
    properties:
      firewall_blocks:
        type: integer
      recent_threats:
        items:
          $ref: '#/definitions/models.SecurityThreat'
        type: array
      suspicious_traffic:
        type: integer
      unauthorized_attempts:
        type: integer
    type: object
  models.SecurityThreat:
    properties:
      details:
        type: string
      ip:
        type: string
      severity:
        type: string
      timestamp:
        type: string
      type:
        type: string
    type: object
  models.SimpleCheckStatusRequest:
    properties:
      otp_code:
        example: "123456"
        type: string
      phone_number:
        example: "087786388052"
        type: string
    required:
    - otp_code
    - phone_number
    type: object
  models.SimpleOTPRequest:
    properties:
      phone_number:
        example: "087786388052"
        type: string
    required:
    - phone_number
    type: object
  models.SimplePurchaseRequest:
    properties:
      access_token:
        example: 1097690:ec321a89-6593-4b01-9a9e-383744301283
        type: string
      package_code:
        example: XL_MASTIF_30D_P_V1
        type: string
      payment_method:
        example: BALANCE
        type: string
      phone_number:
        example: "087786388052"
        type: string
      source:
        example: telegram_bot
        type: string
    required:
    - access_token
    - package_code
    - payment_method
    - phone_number
    type: object
  models.SimpleTransactionCheckRequest:
    properties:
      transaction_id:
        example: a1e3b046-3dda-4eb5-93c2-f0eb01a1a453
        type: string
    required:
    - transaction_id
    type: object
  models.SimpleVerifyOTPRequest:
    properties:
      otp_code:
        example: "123456"
        type: string
      phone_number:
        example: "087786388052"
        type: string
    required:
    - otp_code
    - phone_number
    type: object
  models.SourceStats:
    properties:
      count:
        type: integer
      revenue:
        type: integer
      source:
        type: string
      success_rate:
        type: number
    type: object
  models.SystemMetrics:
    properties:
      cpu_usage:
        type: number
      db_performance:
        $ref: '#/definitions/models.DBMetrics'
      disk_usage:
        $ref: '#/definitions/models.DiskMetrics'
      error_rate:
        type: number
      load_average:
        $ref: '#/definitions/models.LoadMetrics'
      memory_usage:
        $ref: '#/definitions/models.MemoryMetrics'
      network_traffic:
        $ref: '#/definitions/models.NetworkMetrics'
      response_time:
        $ref: '#/definitions/models.ResponseTimeMetrics'
      security_metrics:
        $ref: '#/definitions/models.SecurityMetrics'
      service_status:
        type: string
      throughput:
        type: number
      timestamp:
        type: string
      uptime_check:
        $ref: '#/definitions/models.UptimeMetrics'
    type: object
  models.SystemStats:
    properties:
      failed_transactions:
        type: integer
      last_updated:
        type: string
      success_rate:
        type: number
      successful_transactions:
        type: integer
      total_revenue:
        type: integer
      total_transactions:
        type: integer
    type: object
  models.TransactionRecord:
    properties:
      amount:
        type: integer
      completed_at:
        type: string
      created_at:
        type: string
      error_message:
        type: string
      id:
        type: string
      package_code:
        type: string
      package_name:
        type: string
      payment_method:
        type: string
      phone_number:
        type: string
      processing_fee:
        type: integer
      source:
        type: string
      status:
        type: string
      trx_id:
        type: string
    type: object
  models.UptimeMetrics:
    properties:
      is_up:
        type: boolean
      location:
        type: string
      response_time_ms:
        type: number
      status_code:
        type: integer
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API untuk pembelian paket XL dengan flow yang disederhanakan dan user-friendly
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Nadia Package Purchase API
  version: "2.0"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Login with API key to get access token
      parameters:
      - description: Authentication request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.AuthResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.APIResponse'
      summary: Authenticate with API key
      tags:
      - authentication
  /api/balance:
    get:
      consumes:
      - application/json
      description: Retrieve current account balance
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get account balance
      tags:
      - wallet
  /api/card/packages:
    post:
      consumes:
      - application/json
      description: Check all active packages/quotas on an XL card using OTP verification
      parameters:
      - description: Check active packages request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SimpleCheckStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Check active packages on XL card
      tags:
      - card
  /api/card/status:
    post:
      consumes:
      - application/json
      description: Check the status, balance, and active period of an XL card using
        OTP verification
      parameters:
      - description: Check status request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SimpleCheckStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Check XL card status and balance
      tags:
      - card
  /api/dashboard:
    get:
      consumes:
      - application/json
      description: Get dashboard data including stats, recent transactions, balance,
        and real-time monitoring metrics
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.DashboardData'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get comprehensive dashboard data
      tags:
      - dashboard
  /api/export/invoices:
    get:
      consumes:
      - application/json
      description: Export invoices data to CSV format
      produces:
      - text/csv
      responses:
        "200":
          description: CSV file
          schema:
            type: file
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Export invoices to CSV
      tags:
      - export
  /api/export/transactions:
    get:
      consumes:
      - application/json
      description: Export transactions data to CSV format
      produces:
      - text/csv
      responses:
        "200":
          description: CSV file
          schema:
            type: file
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Export transactions to CSV
      tags:
      - export
  /api/health:
    get:
      consumes:
      - application/json
      description: Check if the API is running properly
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
      summary: Health check
      tags:
      - system
  /api/invoice/stats:
    get:
      consumes:
      - application/json
      description: Get comprehensive invoice statistics including payment rates and
        revenue
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get invoice statistics
      tags:
      - invoice
  /api/invoices:
    get:
      consumes:
      - application/json
      description: Retrieve list of invoices with pagination
      parameters:
      - description: Search term
        in: query
        name: search
        type: string
      - default: 20
        description: Limit per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get invoice list
      tags:
      - invoice
  /api/invoices/{id}:
    get:
      consumes:
      - application/json
      description: Get detailed information about a specific invoice
      parameters:
      - description: Invoice ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get invoice detail
      tags:
      - invoice
  /api/monitoring/logs:
    get:
      consumes:
      - application/json
      description: Get recent application logs including request details and response
        times
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get application request logs
      tags:
      - monitoring
  /api/monitoring/metrics:
    get:
      consumes:
      - application/json
      description: Get detailed system monitoring data including CPU, memory, disk,
        network, and performance metrics
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.SystemMetrics'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get comprehensive system metrics
      tags:
      - monitoring
  /api/monitoring/metrics/realtime:
    get:
      consumes:
      - application/json
      description: Get live monitoring data from the last 10 minutes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get real-time metrics
      tags:
      - monitoring
  /api/monitoring/performance:
    get:
      consumes:
      - application/json
      description: Get detailed performance metrics including response times, throughput,
        and resource usage
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get performance metrics
      tags:
      - monitoring
  /api/monitoring/security:
    get:
      consumes:
      - application/json
      description: Get security metrics including unauthorized attempts, threats,
        and suspicious traffic
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get security monitoring data
      tags:
      - monitoring
  /api/monitoring/uptime:
    get:
      consumes:
      - application/json
      description: Get service health status, uptime information, and availability
        metrics
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get service uptime status
      tags:
      - monitoring
  /api/otp/request:
    post:
      consumes:
      - application/json
      description: Request OTP code to be sent to the specified phone number.
      parameters:
      - description: OTP request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SimpleOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Request OTP for phone number
      tags:
      - otp
  /api/otp/verify:
    post:
      consumes:
      - application/json
      description: Verify OTP code and get access token for purchasing packages
      parameters:
      - description: Verify OTP request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SimpleVerifyOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Verify OTP and get access token
      tags:
      - otp
  /api/packages:
    get:
      consumes:
      - application/json
      description: Retrieve all available packages from Nadia API without filtering
      parameters:
      - default: 100
        description: Limit number of packages returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get all available packages
      tags:
      - packages
  /api/packages/search:
    post:
      consumes:
      - application/json
      description: Search and filter packages by name, price, payment method, etc.
      parameters:
      - description: Search filters
        in: body
        name: search
        required: true
        schema:
          $ref: '#/definitions/models.PackageSearchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Search packages with filters
      tags:
      - packages
  /api/packages/stock:
    get:
      consumes:
      - application/json
      description: Retrieve stock information for all packages
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get package stock information
      tags:
      - packages
  /api/payment-methods:
    get:
      consumes:
      - application/json
      description: Retrieve all available payment methods
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get available payment methods
      tags:
      - payment
  /api/purchase:
    post:
      consumes:
      - application/json
      description: Purchase a package using phone number, package code, payment method,
        and access token
      parameters:
      - description: Purchase request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SimplePurchaseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Purchase a package with access token
      tags:
      - purchase
  /api/reseller/products:
    get:
      consumes:
      - application/json
      description: Retrieve all available products from Nadia API with manipulated
        prices (+500 rupiah)
      parameters:
      - default: 100
        description: Limit number of products returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
        BearerAuth: []
      summary: Get all available products for resellers
      tags:
      - reseller-products
  /api/reseller/products/search:
    post:
      consumes:
      - application/json
      description: Search and filter products by name, price, payment method, etc.
        with manipulated prices (+500 rupiah)
      parameters:
      - description: Search filters
        in: body
        name: search
        required: true
        schema:
          $ref: '#/definitions/models.PackageSearchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
        BearerAuth: []
      summary: Search products with filters for resellers
      tags:
      - reseller-products
  /api/reseller/products/stock:
    get:
      consumes:
      - application/json
      description: Retrieve stock information for all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
        BearerAuth: []
      summary: Get product stock information for resellers
      tags:
      - reseller-products
  /api/stats/daily:
    get:
      consumes:
      - application/json
      description: Get daily statistics for transactions including counts and amounts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get daily transaction statistics
      tags:
      - analytics
  /api/transaction/check:
    post:
      consumes:
      - application/json
      description: Check the status of a transaction by transaction ID
      parameters:
      - description: Transaction check request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SimpleTransactionCheckRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Check transaction status
      tags:
      - transaction
  /api/transactions:
    get:
      consumes:
      - application/json
      description: Get transactions with optional filters like status, source, date
        range, and limit
      parameters:
      - default: 100
        description: Limit number of results
        in: query
        name: limit
        type: integer
      - description: Filter by status (SUCCESS, FAILED, PENDING)
        in: query
        name: status
        type: string
      - description: Filter by source (whatsapp_bot, etc)
        in: query
        name: source
        type: string
      - description: Start date (YYYY-MM-DD)
        in: query
        name: from
        type: string
      - description: End date (YYYY-MM-DD)
        in: query
        name: to
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.TransactionRecord'
                  type: array
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get transactions with filters
      tags:
      - transactions
  /api/transactions/{id}:
    get:
      consumes:
      - application/json
      description: Get detailed information about a specific transaction
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get transaction detail
      tags:
      - dashboard
  /api/user/products:
    get:
      consumes:
      - application/json
      description: Retrieve all available products from Nadia API with manipulated
        prices (+1500 rupiah)
      parameters:
      - default: 100
        description: Limit number of products returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
        BearerAuth: []
      summary: Get all available products for users
      tags:
      - products
  /api/user/products/search:
    post:
      consumes:
      - application/json
      description: Search and filter products by name, price, payment method, etc.
        with manipulated prices (+1500 rupiah)
      parameters:
      - description: Search filters
        in: body
        name: search
        required: true
        schema:
          $ref: '#/definitions/models.PackageSearchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
        BearerAuth: []
      summary: Search products with filters for users
      tags:
      - products
  /api/user/products/stock:
    get:
      consumes:
      - application/json
      description: Retrieve stock information for all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.APIResponse'
      security:
      - ApiKeyAuth: []
        BearerAuth: []
      summary: Get product stock information for users
      tags:
      - products
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    description: 'API Key for authentication. Use: nadia-admin-2024-secure-key'
    in: header
    name: X-API-Key
    type: apiKey
  BearerAuth:
    description: Type "Bearer" followed by a space and the token from /api/auth/login.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
