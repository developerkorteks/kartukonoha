{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API untuk pembelian paket XL dengan flow yang disederhanakan dan user-friendly",
        "title": "Nadia Package Purchase API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "2.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/auth/login": {
            "post": {
                "description": "Login with API key to get access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Authenticate with API key",
                "parameters": [
                    {
                        "description": "Authentication request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AuthResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/balance": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve current account balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Get account balance",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/card/packages": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Check all active packages/quotas on an XL card using OTP verification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "card"
                ],
                "summary": "Check active packages on XL card",
                "parameters": [
                    {
                        "description": "Check active packages request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SimpleCheckStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/card/status": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Check the status, balance, and active period of an XL card using OTP verification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "card"
                ],
                "summary": "Check XL card status and balance",
                "parameters": [
                    {
                        "description": "Check status request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SimpleCheckStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/dashboard": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get dashboard data including stats, recent transactions, balance, and real-time monitoring metrics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "Get comprehensive dashboard data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.DashboardData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/health": {
            "get": {
                "description": "Check if the API is running properly",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/invoice/stats": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get comprehensive invoice statistics including payment rates and revenue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invoice"
                ],
                "summary": "Get invoice statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/invoices": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve list of invoices with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invoice"
                ],
                "summary": "Get invoice list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Limit per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/invoices/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about a specific invoice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invoice"
                ],
                "summary": "Get invoice detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invoice ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/monitoring/logs": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get recent application logs including request details and response times",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "monitoring"
                ],
                "summary": "Get application request logs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/monitoring/metrics": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed system monitoring data including CPU, memory, disk, network, and performance metrics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "monitoring"
                ],
                "summary": "Get comprehensive system metrics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.SystemMetrics"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/monitoring/metrics/realtime": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get live monitoring data from the last 10 minutes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "monitoring"
                ],
                "summary": "Get real-time metrics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/monitoring/performance": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed performance metrics including response times, throughput, and resource usage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "monitoring"
                ],
                "summary": "Get performance metrics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/monitoring/security": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get security metrics including unauthorized attempts, threats, and suspicious traffic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "monitoring"
                ],
                "summary": "Get security monitoring data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/monitoring/uptime": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get service health status, uptime information, and availability metrics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "monitoring"
                ],
                "summary": "Get service uptime status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/otp/request": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Request OTP code to be sent to the specified phone number.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "otp"
                ],
                "summary": "Request OTP for phone number",
                "parameters": [
                    {
                        "description": "OTP request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SimpleOTPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/otp/verify": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Verify OTP code and get access token for purchasing packages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "otp"
                ],
                "summary": "Verify OTP and get access token",
                "parameters": [
                    {
                        "description": "Verify OTP request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SimpleVerifyOTPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/packages": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve all available packages from Nadia API without filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "packages"
                ],
                "summary": "Get all available packages",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Limit number of packages returned",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/packages/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search and filter packages by name, price, payment method, etc.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "packages"
                ],
                "summary": "Search packages with filters",
                "parameters": [
                    {
                        "description": "Search filters",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PackageSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/packages/stock": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve stock information for all packages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "packages"
                ],
                "summary": "Get package stock information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/payment-methods": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve all available payment methods",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Get available payment methods",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/purchase": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Purchase a package using phone number, package code, payment method, and access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "purchase"
                ],
                "summary": "Purchase a package with access token",
                "parameters": [
                    {
                        "description": "Purchase request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SimplePurchaseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/transaction/check": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Check the status of a transaction by transaction ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Check transaction status",
                "parameters": [
                    {
                        "description": "Transaction check request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SimpleTransactionCheckRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/transactions/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about a specific transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "Get transaction detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.APIResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.AuthRequest": {
            "type": "object",
            "required": [
                "api_key"
            ],
            "properties": {
                "api_key": {
                    "type": "string"
                }
            }
        },
        "models.AuthResponse": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "models.DBMetrics": {
            "type": "object",
            "properties": {
                "active_connections": {
                    "type": "integer"
                },
                "avg_query_time_ms": {
                    "type": "number"
                },
                "queries_per_sec": {
                    "type": "number"
                },
                "slow_queries": {
                    "type": "integer"
                }
            }
        },
        "models.DashboardData": {
            "type": "object",
            "properties": {
                "balance": {},
                "invoice_stats": {
                    "$ref": "#/definitions/models.InvoiceStats"
                },
                "monitoring_data": {},
                "recent_invoices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.InvoiceRecord"
                    }
                },
                "recent_transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TransactionRecord"
                    }
                },
                "source_breakdown": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SourceStats"
                    }
                },
                "stats": {
                    "$ref": "#/definitions/models.SystemStats"
                },
                "system_status": {
                    "type": "string"
                }
            }
        },
        "models.DiskMetrics": {
            "type": "object",
            "properties": {
                "free_bytes": {
                    "type": "integer"
                },
                "io_stats": {
                    "$ref": "#/definitions/models.IOStats"
                },
                "total_bytes": {
                    "type": "integer"
                },
                "used_bytes": {
                    "type": "integer"
                },
                "used_percent": {
                    "type": "number"
                }
            }
        },
        "models.IOStats": {
            "type": "object",
            "properties": {
                "read_bytes": {
                    "type": "integer"
                },
                "read_ops": {
                    "type": "integer"
                },
                "write_bytes": {
                    "type": "integer"
                },
                "write_ops": {
                    "type": "integer"
                }
            }
        },
        "models.InvoiceRecord": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_at_month": {
                    "type": "string"
                },
                "created_at_year": {
                    "type": "integer"
                },
                "due_date": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "invoice_id": {
                    "type": "string"
                },
                "invoice_status_id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "modified_at": {},
                "paid_at": {},
                "payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PaymentRecord"
                    }
                },
                "phone": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.InvoiceStats": {
            "type": "object",
            "properties": {
                "last_updated": {
                    "type": "string"
                },
                "paid_invoices": {
                    "type": "integer"
                },
                "payment_rate": {
                    "type": "number"
                },
                "pending_invoices": {
                    "type": "integer"
                },
                "total_invoices": {
                    "type": "integer"
                },
                "total_revenue": {
                    "type": "integer"
                },
                "unpaid_invoices": {
                    "type": "integer"
                }
            }
        },
        "models.LoadMetrics": {
            "type": "object",
            "properties": {
                "load_15min": {
                    "type": "number"
                },
                "load_1min": {
                    "type": "number"
                },
                "load_5min": {
                    "type": "number"
                }
            }
        },
        "models.MemoryMetrics": {
            "type": "object",
            "properties": {
                "available_bytes": {
                    "type": "integer"
                },
                "has_memory_leak": {
                    "type": "boolean"
                },
                "total_bytes": {
                    "type": "integer"
                },
                "used_bytes": {
                    "type": "integer"
                },
                "used_percent": {
                    "type": "number"
                }
            }
        },
        "models.NetworkMetrics": {
            "type": "object",
            "properties": {
                "bandwidth_mbps": {
                    "type": "number"
                },
                "bytes_recv": {
                    "type": "integer"
                },
                "bytes_sent": {
                    "type": "integer"
                },
                "latency_ms": {
                    "type": "number"
                },
                "packets_recv": {
                    "type": "integer"
                },
                "packets_sent": {
                    "type": "integer"
                }
            }
        },
        "models.PackageSearchRequest": {
            "type": "object",
            "properties": {
                "max_price": {
                    "type": "integer",
                    "example": 10000
                },
                "min_price": {
                    "type": "integer",
                    "example": 1000
                },
                "payment_method": {
                    "type": "string",
                    "example": "BALANCE"
                },
                "query": {
                    "type": "string",
                    "example": "masa aktif"
                }
            }
        },
        "models.PaymentRecord": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "completed_at": {},
                "created_at": {
                    "type": "string"
                },
                "expired_at": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "payment_link": {
                    "type": "string"
                },
                "payment_method_id": {
                    "type": "string"
                },
                "payment_status_id": {
                    "type": "string"
                },
                "publisher_order_id": {},
                "reference_id": {
                    "type": "string"
                },
                "reference_type": {
                    "type": "string"
                }
            }
        },
        "models.ResponseTimeMetrics": {
            "type": "object",
            "properties": {
                "average_ms": {
                    "type": "number"
                },
                "max_ms": {
                    "type": "number"
                },
                "min_ms": {
                    "type": "number"
                },
                "p95_ms": {
                    "type": "number"
                },
                "p99_ms": {
                    "type": "number"
                }
            }
        },
        "models.SecurityMetrics": {
            "type": "object",
            "properties": {
                "firewall_blocks": {
                    "type": "integer"
                },
                "recent_threats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SecurityThreat"
                    }
                },
                "suspicious_traffic": {
                    "type": "integer"
                },
                "unauthorized_attempts": {
                    "type": "integer"
                }
            }
        },
        "models.SecurityThreat": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "severity": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.SimpleCheckStatusRequest": {
            "type": "object",
            "required": [
                "otp_code",
                "phone_number"
            ],
            "properties": {
                "otp_code": {
                    "type": "string",
                    "example": "123456"
                },
                "phone_number": {
                    "type": "string",
                    "example": "087786388052"
                }
            }
        },
        "models.SimpleOTPRequest": {
            "type": "object",
            "required": [
                "phone_number"
            ],
            "properties": {
                "phone_number": {
                    "type": "string",
                    "example": "087786388052"
                }
            }
        },
        "models.SimplePurchaseRequest": {
            "type": "object",
            "required": [
                "access_token",
                "package_code",
                "payment_method",
                "phone_number"
            ],
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "1097690:ec321a89-6593-4b01-9a9e-383744301283"
                },
                "package_code": {
                    "type": "string",
                    "example": "XL_MASTIF_30D_P_V1"
                },
                "payment_method": {
                    "type": "string",
                    "example": "BALANCE"
                },
                "phone_number": {
                    "type": "string",
                    "example": "087786388052"
                },
                "source": {
                    "type": "string",
                    "example": "telegram_bot"
                }
            }
        },
        "models.SimpleTransactionCheckRequest": {
            "type": "object",
            "required": [
                "transaction_id"
            ],
            "properties": {
                "transaction_id": {
                    "type": "string",
                    "example": "a1e3b046-3dda-4eb5-93c2-f0eb01a1a453"
                }
            }
        },
        "models.SimpleVerifyOTPRequest": {
            "type": "object",
            "required": [
                "otp_code",
                "phone_number"
            ],
            "properties": {
                "otp_code": {
                    "type": "string",
                    "example": "123456"
                },
                "phone_number": {
                    "type": "string",
                    "example": "087786388052"
                }
            }
        },
        "models.SourceStats": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "revenue": {
                    "type": "integer"
                },
                "source": {
                    "type": "string"
                },
                "success_rate": {
                    "type": "number"
                }
            }
        },
        "models.SystemMetrics": {
            "type": "object",
            "properties": {
                "cpu_usage": {
                    "type": "number"
                },
                "db_performance": {
                    "$ref": "#/definitions/models.DBMetrics"
                },
                "disk_usage": {
                    "$ref": "#/definitions/models.DiskMetrics"
                },
                "error_rate": {
                    "type": "number"
                },
                "load_average": {
                    "$ref": "#/definitions/models.LoadMetrics"
                },
                "memory_usage": {
                    "$ref": "#/definitions/models.MemoryMetrics"
                },
                "network_traffic": {
                    "$ref": "#/definitions/models.NetworkMetrics"
                },
                "response_time": {
                    "$ref": "#/definitions/models.ResponseTimeMetrics"
                },
                "security_metrics": {
                    "$ref": "#/definitions/models.SecurityMetrics"
                },
                "service_status": {
                    "type": "string"
                },
                "throughput": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "string"
                },
                "uptime_check": {
                    "$ref": "#/definitions/models.UptimeMetrics"
                }
            }
        },
        "models.SystemStats": {
            "type": "object",
            "properties": {
                "failed_transactions": {
                    "type": "integer"
                },
                "last_updated": {
                    "type": "string"
                },
                "success_rate": {
                    "type": "number"
                },
                "successful_transactions": {
                    "type": "integer"
                },
                "total_revenue": {
                    "type": "integer"
                },
                "total_transactions": {
                    "type": "integer"
                }
            }
        },
        "models.TransactionRecord": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "completed_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "error_message": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "package_code": {
                    "type": "string"
                },
                "package_name": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "processing_fee": {
                    "type": "integer"
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "trx_id": {
                    "type": "string"
                }
            }
        },
        "models.UptimeMetrics": {
            "type": "object",
            "properties": {
                "is_up": {
                    "type": "boolean"
                },
                "location": {
                    "type": "string"
                },
                "response_time_ms": {
                    "type": "number"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "API Key for authentication. Use: nadia-admin-2024-secure-key",
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        },
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and the token from /api/auth/login.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}